Find the output of the following code

Q1)
class Test extends Thread
{
	public void run()
	{
		for(int i=0; i<=10; i++)
		{
			System.out.println("Hello Welcome here.."+i);
		}
	}
}
class Test1 
{
	public static void main(String[] args) 
	{
		Test t = new Test();
		t.start();
		t.start();
	}
}



Q2)
class Test
{
    public static void main(String []args)
    {
        Thread t = Thread.currentThread();
		System.out.println(t);
        System.out.println("Name of thread  : "+t.getName());
		System.out.println("Id of thread  : "+t.getId());

    } 
}

Q3) 
class Test
	{
 public static void main(String args[])
	{
    new Thread()
	{
    public void run()
	{
      System.out.println("task one");
    }
    }.start();

  new Thread()
  {
    public void run()
	{
      System.out.println("task two");
    }
  }.start();
  
 }
}

Q4)
class Test
	{
 public static void main(String args[])
	{
  Runnable r1=new Runnable()
  {
    public void run()
	{
      System.out.println("task one");
    }
  };

  Runnable r2=new Runnable()
  {
    public void run()
	{
      System.out.println("task two");
    }
  };
    
  Thread t1=new Thread(r1);
  Thread t2=new Thread(r2);

  t1.start();
  t2.start();
 }
}

Q5)
class SimpleThread extends Thread 
{
   public SimpleThread(String str) 
	{
	super(str);
    }
    public void run() 
	{
	for (int i = 0; i < 10; i++) 
	{
	System.out.println(i + " " + getName());
    try 
	{
	sleep((int)(Math.random() * 1000));
	}
	catch (InterruptedException e) {}
	}
	System.out.println("DONE! " + getName());
    }
}
class Test
{
public static void main (String args[]) 
    {
        new SimpleThread("J2EE").start();
        new SimpleThread("J2ME").start();
    }
}

Q6)

import java.io.*;
import java.util.*;
class Prime extends Thread
{
	public void run()
	{
		try
		{
			for(int i=1;i<=10;i++)
			{
				if(i==2||i==3||i==5||i==7)
				{
					System.out.println ("Prime No.= "+i);
				}
				Thread.sleep(500);
			}
		}
		catch (Exception e){}
	}
}
class NotPrime extends Thread
{
	public void run()
	{
		try
		{
			for(int i=1;i<=10;i++)
			{
				if(i==4||i==6||i==8||i==9||i==10)
				{
					System.out.println ("Non-Prime No.= "+i);
				}
				Thread.sleep(500);
			}
		}
		catch (Exception e){}
	}
}
class Test
{
	public static void main(String args[])
	{
		new Prime().start();
		new NotPrime().start();
	}
}	

Q7)
public class Test21 extends Thread
{
	static Thread t;
	public static void main(String [] args)
	{
		try
		{
			t=new Thread(new Test21(),"Ravi");
			t.start();
		}
		catch (Exception e)
		{
			System.out.println(e);
		}
	}
	public void run()
	{
		for(int i=1; i<5; i++)
		{
			try
			{
				System.out.print(Thread.currentThread().getName()+"");
				t.start();
			}
			catch (Exception e)
			{
				System.out.println(" will not botther about but "+e+" happened "+i+" times");
			}
		}
	}
}

Q8)

class Test22 
{
	public static void main(String[] args) 
	{		
		try
		{
			Horse h = new Horse();
			Thread t1= new Thread(h,"MyHorse");
			Thread t2= new Thread(h,"YourHorse");
			new Test22().go(t2);
			t1.start(); t2.start();
		}
		catch (Exception e)
		{
			System.out.println(e);
		}

		void go(Thread t)
		{
			t.start();
		}		
	}
	
}
class Horse implements Runnable
{
	public void run()
	{
		System.out.println(Thread.currentThread().getName()+" ");
	}
}

Q9)

class Test23 
{
	public static void main(String[] args) 
	{
		try
		{
			Horse h = new Horse();
			Thread t1= new Thread(h,"MyHorse");
			Thread t2= new Thread(h,"YourHorse");
			new Test23().go(t2);
			t1.start(); t2.start();
		}
		catch (Exception e)
		{
			System.out.println(e);
		}
	}
	
		void go(Thread t)
		{
			t.start();
		}
	
	
}
class Horse implements Runnable
{
	public void run()
	{
		System.out.println(Thread.currentThread().getName()+" ");
	}
}

Q10)

class Parrot implements Runnable
{
	public void run()
	{
		System.out.println(Thread.currentThread().getName()+" ");
	}
}
class Test26
{
	static Parrot p;

	static { p=new Parrot();}

	{Thread t1= new Thread(p,"Peacock"); t1.start();}

	public static void main(String [] args)
	{
		new Test26();

		new Thread( new Runnable()
		{
			public void run()
			{
				;
			}
		},"Koyal").start();

		new Thread(new Parrot(),"Parrot").start();
	}
	

	{
	  Thread t2 = new Thread(p,"Sparrow");t2.start();
	}

	}

Q11)
class MyThreadA extends Thread
{
	String s;
	public void run(String s) 
	{ 
		this.s=s;
		for (;;) 
		{
			System.out.println("s will be printed :"+s);
		}
	}
}
class MyThreadB extends Thread 
{
	String t;
	public void run(String t) 
	{ 
		this.t=t;
		for (;;) 
		{
			System.out.println("t will be printed :"+t);
		}
	}
}
public class Test31
{
public static void main(String [] args) 
{
  MyThreadA t1 = new MyThreadA();
  MyThreadB t2 = new MyThreadB();
		t1.start();
		t2.start();
		
	}
}

Q12)
public class Test44 extends Thread
{
public static void main(String argv[])
{
Test44 b = new Test44();
b.run();
b.start();
} 
public void start()
{
for (int i = 0; i < 10; i++)
{
System.out.println("Value of i = " + i); 
}  
}
}

Q13)
class Test58 
{
	public static void main(String[] args) 
	{
		
	}
	System.out.println("Hello World!");
}

Q14)
class Test61
{
public static void main(String[] args) 
{
Runnable r1 = new Runnable() 
{
public void run() 
{
try 
{
while (true) 
{
System.out.println("Hello, world!");
Thread.sleep(1000);
}
} 
catch (InterruptedException iex) {}
}
};

Runnable r2 = new Runnable() 
{
public void run() 
{
try
{
while (true) 
{
System.out.println("Goodbye, " +" Beautiful world!");
Thread.sleep(2000);
}
} 
catch (InterruptedException iex) {}
}
};

Thread thr1 = new Thread(r1);
Thread thr2 = new Thread(r2);
thr1.start();
thr2.start();
}
}

Q15)
class Test4
{
   public static void main(String []argv)
   {
      Thread t = Thread.currentThread();
      System.out.println("Name of current thead : "+t.getName());
      t.setName("First Thread");
      System.out.println("Name of thread after change : "+t.getName());
   } 
}

Q16)
class Test15 extends Thread
{
public void run()
{
System.out.println("PRINT ME");
}
public static void main(String []str)
{
try
{
for(int i=0;i<9;i++)
{
System.out.println(i);
Thread.sleep(500);
}
}
catch(InterruptedException e)
{
System.out.println("thread exception");
}
Thread t=new Thread();
t.start();
}
}

Q17)
class Foo implements Runnable
{
public void run() 
{
for(int i=0;i<3;i++)
System.out.println("Run by..."+Thread.currentThread().getName()+",i Is "+ i);
}
public void run(String name)
{
System.out.println("This is Second"+name);
}
}
public class Test18
{
public static void main(String args [])
{
Foo f = new Foo();
Thread t = new Thread(f);
try 
{
System.out.println("Number Will be printt After 500 MiliSecond..");
for(int j=0;j<5;j++)
{
System.out.println("This is j..."+j);
t.sleep(500);
}
}
catch(InterruptedException e) 
{
System.out.println("InterruptedException.."+ e);
e.printStackTrace();
}
}
}

Q18)
public class Test28 extends Thread
{
	public static void main(String [] args)
	{
		System.out.println(Thread.currentThread().getId()+" ");
		Thread t1 = new Thread(new Test28(),"Rahul");
		Thread t2 = new Thread(new Test28(),"Ravi");
		Thread t3 = new Thread(new Test28(),"Puja");
		t3.start();
		t1.start();
		t2.run();
		t2.start();
	}
	public  void run()
	{
		    for(int i=0; i<2; i++)
			System.out.println(Thread.currentThread().getName()+" I'm :"+i);
			System.out.println("It is end of loop");
	}
}

Q19)

class MyThread extends Thread 
{
public void run() 
{
		for (int i=0; i < 10; i++) 
		{
			System.out.println("hello world1");
		}
	}
}
public class Test36
{
public static void main(String [] args) 
{
MyThread t1 = new MyThread();
t1.start();
try 
{
t1.join(); 
} 
catch (InterruptedException e) 
{
System.out.println("ERROR: Thread was interrupted");
}       
System.out.println("Thread is done!");
	}
}

Q20)
public class JoinDemo1 
{
	public static void main(String[] args) throws InterruptedException 
	{
		System.out.println("Main thread started");
		Thread thread = Thread.currentThread();
		String name = thread.getName();
		
		for(int i=1; i<=5; i++)
		{			
			System.out.println(i + " by "+name+ " thread ");
			Thread.sleep(1000);
			thread.join(); 
		}		
		System.out.println("Main thread ended");
	}

}