Question-1
--------------
Create a class Employee (Business Logic Class)

Instance Variables: 

employeeId   		:private-int

employeeName 	: private-String

employeeSalary	: private-double



Create a parameterized constructor to initialilize all the fields.

Methods :
Create a static method getEmployeeObject() in the Employee class

  Method Name 	 : getEmployeeObject()

   Parameter		 : no parameter

  Return type 		 : Employee

Access modifier 	 : public



getEmployeeObject() method of Employee class should take employeeId, employeeName, employeeSalary from the keyboard to initialize the instance variables, Create and return the Employee object from this method.



Override toString() from Object class to print Employee class properties.



Create another class Main which contains main method (ELC class).
Employee data initialisation using scanner class.
Accept 5 Employee Object from keyboard and print their data using toString() method 


Test Cases :
--------------
case-1
--------
Sample Input :
----------------
Enter details for Employee 1:
Enter Employee ID (positive integer): 101
Enter Employee Name (non-empty): Virat Kohli
Enter Employee Salary (non-negative): 50000

Expected Output :

Employee [ID: 101, Name: Virat Kohli, Salary: 50000.0]

case-2
--------
Sample Input :
-----------------
Enter details for Employee :2

Enter Employee ID (positive integer): -5
Invalid input. Employee ID must be a positive integer.

Enter Employee ID (positive integer): 102
Enter Employee Name (non-empty): M.S Dhoni
Enter Employee Salary (non-negative): 60000

Expected Output :
----------------------
Invalid input. Employee ID must be a positive integer.
Employee [ID: 102, Name:M.S Dhoni, Salary: 60000.0]

ans:
package com.test1;

import java.util.Scanner;

public class Employee {
	private int employeeId;
    private String employeeName;
    private double employeeSalary;
	public Employee(int employeeId, String employeeName, double employeeSalary) {
		super();
		this.employeeId = employeeId;
		this.employeeName = employeeName;
		this.employeeSalary = employeeSalary;
	}
	@Override
	public String toString() {
		return "Employee [employeeId=" + employeeId + ", employeeName=" + employeeName + ", employeeSalary="
				+ employeeSalary + "]";
	} 
    
    public static Employee getEmployeeObject() {
    	Scanner sc = new Scanner(System.in);
    	
    	System.out.println("Enter Employee Id: ");
    	int employeeId = sc.nextInt();
    	sc.nextLine();
    	
    	if(employeeId<0)
    	{
    		System.err.println("Employee Id Must Be Positive");
    		System.exit(0);
    	}
    	
    	System.out.println("Enter Employee Name: ");
    	String employeeName = sc.nextLine();
    	
    	System.out.println("Enter Employee Salary: ");
    	double employeeSalary = sc.nextDouble();
    	
    	return new Employee(employeeId,employeeName,employeeSalary);
    	
    }
    
}


package com.test1;

import java.util.Scanner;

public class EmployeeDemo {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter No Of Objects: ");
         int noOfObject = sc.nextInt();	
		for(int i=1 ; i<=noOfObject ; i++)
		{
			Employee Object = Employee.getEmployeeObject();
			System.out.println(Object);
		}
		sc.close();

	}

}
===================================================================================================================
Question - 2
--------------
 Design sports Model system

Create  a class name Sports (BLC Class)


Atributes :

name 			Data Type
-------			--------------
sportName                    :String 

teamSize		     :int 

sportType                    :String 

Acess modifier  :private (for all varriable)

Take a no parameterized constructor and initialize all the default values to varriables.

Take one more constructor with two parameteres sportName and teamSize
and intialize with user values and write the validation logic

Take another constructor with 3 parameters and intialize all the values and check the validation.

Methods  :

Method Name     : displayInfo
Return Type 	     : void
Acess Modifier    : public 

and in this method to print all the details of the class.


Take a Main Class(ELC Class)wich having main method and instatiate the object and execute the method.

Test Cases:
-------------

for teamSize. If teamSize is less than or equal to zero, it sets teamSize to 0 and prints an error message.

Test Case 1: Valid sport with name and team size
Sport Name: Football
Team Size: 11
Sport Type: Unknown

Expected Output :
---------------------
(print the details)

Test Case 2: Invalid sport with negative team size
Error: Team size must be positive.
Sport Name: Volleyball
Team Size: -1
Sport Type: Unknown

Expected Output :
---------------------
Error: Team size must be positive.
ans:

package com.test2;

public class Sports {
	private String sportName;
	private int teamSize;
	private String sportType;
	
	public Sports() {
		
	}
	
	    public Sports(String sportName, int teamSize) {
		super();
		if(teamSize<=0)
		{
			System.err.println("Team size must be positive.");
			System.exit(0);
		}
		if(sportName==null || sportName.length()==0)
		{
			System.err.println("Sport Name Cannot be Empty");
			System.exit(0);
		}

		this.teamSize = teamSize;			
		this.sportName = sportName;
		
	}
	
	public Sports(String sportName, int teamSize, String sportType) {
		super();
		if(teamSize<=0)
		{
			System.err.println("Team size must be positive.");
			System.exit(0);
		}
		if(sportName==null || sportName.length()==0)
		{
			System.err.println("Sport Name Cannot be Empty");
			System.exit(0);
		}
		
		if(sportType==null || sportType.length()==0)
		{
			System.err.println("Sport Type Cannot be Empty");
			System.exit(0);
		}
		this.sportName = sportName;
		this.teamSize = teamSize;
		this.sportType = sportType;
	}
	
	public void displayInfo() {
		
			System.out.println("Team Size: "+teamSize);
			System.out.println("Sport Name: "+sportName);
			System.out.println("Sport Type: "+sportType);
		}
		
	}
	
	


package com.test2;

import java.util.Scanner;

public class SportsDemo {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		System.out.println("Enter Sport Name: ");
		String sportName = sc.nextLine();
		
		System.out.println("Enter Team Size: ");
		int teamSize = sc.nextInt();
		
		System.out.println("Enter Sport Type: ");
		String sportType = sc.nextLine();
		sportType = sc.nextLine();
		
		Sports s1 = new Sports();
		Sports s2 = new Sports(sportName,teamSize);
		Sports s3 = new Sports(sportName,teamSize,sportType);
		s1.displayInfo();
		s2.displayInfo();
		s3.displayInfo();
  	    sc.close();

	}

}
